# This action requires the following secrets to be set:
#   github.token - set by GH
#   STORACHA_KEY - created by `w3 key create --json`
#   STORACHA_PROOF - created by `w3 delegation create --base64`
#   PINATA_JWT - exported as a JWT from the Pinata dashboard
#   FILEBASE_KEY - exported from the Filebase dashboard
#   FILEBASE_SECRET - as above
#   CLOUDFLARE_DNS_RECORD_ID - Cloudflare assigns an ID to every DNS record. copied from the Cloudflare API
#   CLOUDFLARE_ZONE_ID - Cloudflare refers to each domain as a "Zone". They are assigned IDs by Cloudflare. copied from the Cloudflare dashboard
#   CLOUDFLARE_AUTH_TOKEN - an API Token with the scope dns:edit for the jamesyoung.ch Zone. copied from the Cloudflare dashboard

name: Deploy to GitHub Pages & IPFS
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install pnpm
        uses: pnpm/action-setup@v4 # pnpm version is read from package.json

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: "pnpm run build:prod"

      - name: Remove Template Files
        run: rm -rf src/data.json src/index.mustache

      - name: Move Output to Dist
        run: mv src dist

      # This step adds some random noise to a file in Dist.
      # Pinata fails if the upload is identical to an existing upload.
      # The added noise makes each build unique.
      - name: Add Noise to Dist
        run: dd if=/dev/urandom of=dist/noise bs=200 count=1

      - uses: actions/upload-artifact@v4
        with:
          name: build-dist
          path: dist
          retention-days: 1

  deploy-gh-pages:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: actions/download-artifact@v4
        with:
          name: build-dist
          path: dist

      - name: Deploy to GH Pages ðŸš€
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ github.token }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: dist # The folder the action should deploy.
          CLEAN: true # Automatically remove deleted files from the deploy branch.

  deploy-ipfs:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: actions/download-artifact@v4
        with:
          name: build-dist
          path: dist

      - name: Deploy to IPFS
        id: deploy
        uses: ipfs/ipfs-deploy-action@v1
        with:
          github-token: ${{ github.token }}
          path-to-deploy: dist
          # storacha
          storacha-key: ${{ secrets.STORACHA_KEY }}
          storacha-proof: ${{ secrets.STORACHA_PROOF }}
          # pinate
          pinata-jwt-token: ${{ secrets.PINATA_JWT }}
          pinata-pinning-url: 'https://api.pinata.cloud/psa'
          # filebase
          filebase-bucket: 'jamesyoung-ch'
          filebase-access-key: ${{ secrets.FILEBASE_KEY }}
          filebase-secret-key: ${{ secrets.FILEBASE_SECRET }}

      - name: Update DNSLink Record in Cloudflare DNS
        uses: ipfs/dnslink-action@v0.1
        with:
          github_token: ${{ github.token }}
          cid: ${{ steps.deploy.outputs.cid }} # The `_dnslink=...` string is automatically constructed from the CID
          dnslink_domain: 'jamesyoung.ch'
          cf_record_id: ${{ secrets.CLOUDFLARE_DNS_RECORD_ID }}
          cf_zone_id: ${{ secrets.CLOUDFLARE_ZONE_ID }}
          cf_auth_token: ${{ secrets.CLOUDFLARE_AUTH_TOKEN }}
